<?php

/**
 * @file
 * Contains role_registration.module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Render\Element\PathElement;
use Drupal\role_registration\Service\RoleRegistrationManagerInterface;
use Drupal\user\RoleInterface;

/**
 * Implements hook_entity_type_alter().
 */
function role_registration_entity_type_alter(array &$entity_types) {
  // Get all form display modes.
  $form_modes = Drupal::service('entity_display.repository')->getAllFormModes();
  foreach ($form_modes as $entity_type => $display_modes) {
    if ($entity_type !== 'user') {
      continue;
    }

    $user_type = $entity_types[$entity_type];
    foreach ($display_modes as $machine_name => $form_display) {
      $default_handler_class = $user_type->getHandlerClasses()['form']['default'];
      $user_type->setFormClass($machine_name, $default_handler_class);
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function role_registration_form_user_role_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  /** @var Drupal\role\Service\RoleControlManagerInterface $control_manager */
  $control_manager = Drupal::service('role.control_manager');
  /** @var \Drupal\user\RoleInterface $role */
  $role = $form_state->getFormObject()->getEntity();
  $register_page_url = RoleRegistrationManagerInterface::ROLE_REGISTRATION_BASE_REGISTER_PATH . '/' . $role->id();

  $registration_states = [
    'visible' => [
      [':input[name="registration_status"]' => ['checked' => TRUE]],
    ],
  ];

  $form['account']['registration'] = [
    '#type' => 'fieldset',
    '#title' => t('Registration'),
  ];

  $form['account']['registration']['registration_status'] = [
    '#type' => 'checkbox',
    '#title' => t('Enable registration by form mode'),
  ];

  $form['account']['registration']['account_registration_form_mode'] = [
    '#type' => 'select',
    '#title' => t('Registration Form mode'),
    '#options' => $control_manager->getUserFormModesOptions(),
    '#description' => t('Select which form mode to use on the user registration page'),
    '#states' => $registration_states,
  ];

  $form['account']['registration']['register_page_alias'] = [
    '#type' => 'textfield',
    '#title' => t('Registration page alias'),
    '#convert_path' => PathElement::CONVERT_NONE,
    '#description' => t('Register page url for this role is @url', ['@url' => $register_page_url]),
    '#field_prefix' => Drupal::request()->getSchemeAndHttpHost(),
    '#states' => $registration_states,
  ];

  $form['#entity_builders'][] = 'role_registration_third_party_settings_form_builder';
}

/**
 * Entity builder for the role configuration entity.
 *
 * @param $entity_type
 * @param \Drupal\user\RoleInterface $role
 * @param $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 */
function role_registration_third_party_settings_form_builder($entity_type, RoleInterface $role, &$form, FormStateInterface $form_state) {

}
